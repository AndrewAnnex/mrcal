Call the optimization callback function

SYNOPSIS

    x,Jt = mrcal.optimizerCallback( intrinsics_data,
                                    extrinsics_rt_fromref,
                                    frames_rt_toref, points
                                    observations_board, indices_frame_camintrinsics_camextrinsics,
                                    observations_point, indices_point_camintrinsics_camextrinsics_flags,

                                    lensmodel,
                                    imagersizes                       = imagersizes,
                                    observed_pixel_uncertainty        = observed_pixel_uncertainty,
                                    do_optimize_intrinsic_core        = True,
                                    do_optimize_intrinsic_distortions = True,
                                    calibration_object_spacing        = object_spacing,
                                    calibration_object_width_n        = 10,
                                    calibration_object_height_n       = 9,
                                    point_min_range                   = 0.1,
                                    point_max_range                   = 100.0,
                                    skip_regularization               = False,
                                    get_covariances                   = False,
                                    verbose                           = False)

This exists for diagnostics. The main optimization routine in mrcal.optimize()
calls a function repeatedly to find a set of parameters that minimize the errors
norm2(x). This function is available by itself here. The arguments are largely
the same as those to mrcal.optimize(), but the inputs are all read-only. The
output is returned in a tuple:

- x: a vector of measurements

- J: a sparse matrix of gradients of the measurements in respect to the
  parameters

If get_covariances then we ALSO return covariances:

- covariances_ief: the intrinsics-extrinsics-frames covariances

- covariances_ief_rotationonly: the intrinsics-extrinsics-frames covariances at
  infinity: only the rotation components of the extrinsics and frames are
  considered

- icam_extrinsics_covariances_ief: if icam_intrinsics_covariances_ief is given
  as >= 0, this is the corresponding icam_extrinsics. If the cameras aren't
  stationary (no correspondence exists), the function call will fail. If the
  corresponding camera is at the coordinate system reference,
  icam_intrinsics_covariances_ief is -1. if icam_intrinsics_covariances_ief
  doesn't request a specific camera (<0), this is None

Note that the optimizer uses some weights on the measurements, and some scaling
on the parameters. The values returned here are the optimizer-internal values.
To bring the jacobian into real units, call solver_context.pack(J)

See mrcal.optimize() for a description of the arguments
