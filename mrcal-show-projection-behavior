#!/usr/bin/python3

r'''Visualize the behavior or a lens model

SYNOPSIS

  $ mrcal-show-projection-behavior --vectorfield left.cameramodel

  ... a plot pops up showing the vector field of the difference from a pinhole
  projection

This tool is used to examine how a lens model behaves. Depending on the model,
the vectors could be very large or very small, and we can scale them by passing
'--scale s'. By default we sample in a 60x40 grid, but this spacing can be
controlled by passing '--gridn w h'.

By default we render a heat map of the lens effects. We can also see the
vectorfield by passing in --vectorfield. Or we can see the radial distortion
curve by passing --radial

'''


import sys
import argparse
import re
import os

def parse_args():

    parser = \
        argparse.ArgumentParser(description = __doc__,
                                formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument('--gridn',
                        type=int,
                        default = (60,40),
                        nargs = 2,
                        help='''How densely we should sample the imager. By default we report a 60x40 grid''')

    parser.add_argument('--scale',
                        type=float,
                        default = 1.0,
                        help='''Scale the vectors by this factor. Default is 1.0 (report the truth), but this is often too small to see''')

    parser.add_argument('--radial',
                        action='store_true',
                        help='''Show the radial distortion scale factor instead of a colormap/vectorfield''')
    parser.add_argument('--vectorfield',
                        action = 'store_true',
                        default = False,
                        help='''Plot the diff as a vector field instead of as a heat map. The vector field
                        contains more information (magnitude AND direction), but
                        is less clear at a glance''')

    parser.add_argument('--cbmax',
                        type=float,
                        default=10,
                        help='''Maximum range of the colorbar''')

    parser.add_argument('--extratitle',
                        type=str,
                        default = None,
                        help='''Extra title string for the plot''')

    parser.add_argument('--hardcopy',
                        type=str,
                        help='''Write the output to disk, instead of making an interactive plot''')
    parser.add_argument('--extraset',
                        type=str,
                        action='append',
                        help='''Extra 'set' directives to gnuplot. Can be given multiple times''')

    parser.add_argument('model',
                        type=str,
                        help='''Input camera model. If "-' is given, we read standard input''')

    return parser.parse_args()

args = parse_args()

# arg-parsing is done before the imports so that --help works without building
# stuff, so that I can generate the manpages and README




import numpy as np
import numpysane as nps

import mrcal





model = mrcal.cameramodel(args.model)

if args.radial and args.vectorfield:
    sys.stderr.write("Usage error: at most one of --radial and --vectorfield can be given\n")
    sys.exit(1)

if   args.radial:      mode = 'radial'
elif args.vectorfield: mode = 'vectorfield'
else:                  mode = 'heatmap'

plotkwargs = {}
if args.extraset is not None:
    plotkwargs['set'] = args.extraset

plot = mrcal.show_projection_behavior(model,
                                      mode,
                                      args.scale,
                                      args.cbmax,
                                      args.gridn[0], args.gridn[1],

                                      extratitle   = args.extratitle,
                                      hardcopy     = args.hardcopy,
                                      **plotkwargs)

if args.hardcopy is None:
    plot.wait()
