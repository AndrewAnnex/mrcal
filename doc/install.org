#+title: Building or installing

I provide packages for a number of distros. I /strongly/ recommend you use these
instead of building from source.

* Installing from packages
** Debian-based
I currently distribute packages for

- Debian/sid
- Debian/buster
- Ubuntu/focal (20.04 LTS)
- Ubuntu/bionic (18.04 LTS)

To use these, add to your =/etc/apt/sources.list=:

#+begin_example
deb [trusted=yes] http://fatty.jpl.nasa.gov/DISTRO/ DISTRO main
#+end_example

where =DISTRO= is one of

- =sid=
- =buster=
- =focal=
- =bionic=

Then, =apt update && apt install mrcal libmrcal-dev=. The =mrcal= package pulls
in the commandline tools and, indirectly, the python libraries. The
=libmrcal-dev= is the C dev stuff; not needed if you're not building C code that
uses mrcal. The chessboard corner finder, while not strictly required, is needed
if you're doing chessboard-based calibrations. =apt install mrgingham=

** RPM-based
There are packages deployed on the maritime robotics CentOS-7 YUM servers. Some
dependencies are more recent than the usual packages, so you need to enable the
/backports/ repo. You can generate the definition from a search/replace of the
"main" definition:

#+begin_src sh
< /etc/yum.repos.d/mrbuild-main.repo \
  perl -p -e 's/main/backports/g' \
> /etc/yum.repos.d/mrbuild-backports.repo
#+end_src

Then, as with Debian, you get the =mrcal= and =mrcal-devel= and =mrgingham=
packages.

* Building from source
If you cannot use the packages for whatever reason, you must build from source.
This isn't /difficult/, but requires you to obtain all the dependencies. They're
listed in the =Build-Depends= section of the [[https://www.github.com/dkogan/mrcal/blob/master/debian/control][package definition]]. Most of these
are available in most distros. Things that may not be:

- =libdogleg-dev=: the optimization library. Sources live [[https://github.com/dkogan/libdogleg/][here]]. You need at
  least version 0.15.3.

- =vnlog=: the toolkit to manipulate textual tables. Sources live [[https://github.com/dkogan/vnlog/][here]]. You only
  /need/ this for the test suite. There's nothing to build. Simply downloading
  the sources and pointing the =PATH= there is sufficient.

- =python3-numpysane=: The make-numpy-reasonable library from [[https://github.com/dkogan/numpysane/][here]]. You
  absolutely need at least version 0.27. If possible, get 0.29 or later.
  Available in the usual places Python libraries live. This is a python-only
  library. Simply downloading the sources and pointing the =PYTHONPATH= there is
  sufficient.

- =python3-gnuplotlib=: The plotting library from [[https://github.com/dkogan/gnuplotlib/][here]]. You need at least
  version 0.36. Available in the usual places Python libraries live. This is a
  python-only library. Simply downloading the sources and pointing the
  =PYTHONPATH= there is sufficient.

- =mrgingham=: the chessboard corner finder. This isn't strictly a requirement -
  any corner finder can be used. If you want to use this one (and you can't use
  the packages), you need to build it. Sources live [[https://github.com/dkogan/mrgingham/][here]].

Once these are all downloaded, =libdogleg= built and the =PATH= and =PYTHONPATH=
set, we can build mrcal. The child processes need access to the =PATH= and
=PYTHONPATH=, so

#+begin_src sh
export PATH
export PYTHONPATH
#+end_src

If you "installed" =libdogleg= somehow, then you're ready, so just =make=.
Otherwise, tell the build about where the built =libdogleg= is:

#+begin_src sh
LIBDOGLEGDIR=....
CFLAGS=-I$LIBDOGLEGDIR LDFLAGS="-L$LIBDOGLEGDIR -Wl,-rpath=$LIBDOGLEGDIR"  make
#+end_src

If that works, the test suite should all pass:

#+begin_src sh
make test
#+end_src

If stuff doesn't work, feel free to bug me. But you /really/ should be using the
packages, if at all possible
* code                                                             :noexport:
dependency building

distro=bionic; sbuild --lintian-opt='--suppress-tags=bad-distribution-in-changes-file' --anything-failed-commands '%s' --nolog -s --force-orig-source -A -d $distro --extra-repository="deb [trusted=yes] file:///var/www/debian/$distro/public/ $distro main" -j 18
