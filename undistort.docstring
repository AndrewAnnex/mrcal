Removes distortion from pixel observations

SYNOPSIS

    q_pinhole = mrcal.undistort( # (N,2) array of pixel observations we're
                                 # correction
                                 q,

                                 distortion_model, intrinsics_data )

Maps a set of distorted 2D imager points q to a set of imager points that would
result from observing the same vectors with an undistorted model. Here the
undistorted model is a pinhole camera with the parameters given in the
arguments, or the same parameters as in the distorted camera, for arguments that
are omitted or <= 0.

This is the "reverse" direction, so we need a nonlinear optimization to compute
this result. OpenCV has cvUndistortPoints() (and cv2.undistortPoints()), but
these are inaccurate: https://github.com/opencv/opencv/issues/8811

This function does this precisely AND supports distortions other than OpenCV's


ARGUMENTS

- q: array of dims (...,2); the pixel coordinates we're undistorting. This
  supports broadcasting fully, and any leading dimensions are allowed, including
  none

- distortion_model: a string such as

  DISTORTION_NONE
  DISTORTION_OPENCV4
  DISTORTION_OPENCV5
  DISTORTION_OPENCV8
  DISTORTION_OPENCV12 (if we have OpenCV >= 3.0.0)
  DISTORTION_OPENCV14 (if we have OpenCV >= 3.1.0)
  DISTORTION_CAHVOR
  DISTORTION_CAHVORE

- intrinsics_data: array of dims (Nintrinsics):

    (focal_x, focal_y, center_pixel_x, center_pixel_y, distorion0, distortion1,
    ...)

  The focal lengths are given in pixels.

- fx,fy,cx,cy: parameters for the pinhole camera we're using. Optional. Any of
  these can be omitted or given as <= 0, in which case the corresponding
  parameter from the distorted model will be used

We return an (...,2) array of undistorted pixel coordinates
