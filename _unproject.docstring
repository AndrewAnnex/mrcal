Removes distortion from pixel observations

SYNOPSIS

    v = mrcal._unproject( # (N,2) array of pixel observations
                          q,
                          lens_model, intrinsics_data )

This is the internal written-in-C _unproject(). mrcal.unproject() is a python
wrapper that has a slow path to handle CAHVORE. Otherwise, the wrapper just
calls this function, which does NOT support CAHVORE

Maps a set of 2D imager points q to a 3d vector in camera coordinates that
produced these pixel observations. The 3d vector is unique only up-to-length.
The returned vectors aren't normalized.

This is the "reverse" direction, so an iterative nonlinear optimization is
performed internally to compute this result. This is much slower than
mrcal_project. For OpenCV distortions specifically, OpenCV has
cvUndistortPoints() (and cv2.undistortPoints()), but these are inaccurate:
https://github.com/opencv/opencv/issues/8811

This function does NOT support CAHVORE.

ARGUMENTS

- q: array of dims (...,2); the pixel coordinates we're unprojecting. This
  supports broadcasting fully, and any leading dimensions are allowed, including
  none

- lens_model: a string such as

  LENSMODEL_PINHOLE
  LENSMODEL_OPENCV4
  LENSMODEL_CAHVOR
  LENSMODEL_SPLINED_STEREOGRAPHIC_order=3_Nx=16_Ny=12_fov_x_deg=100

- intrinsics_data: array of dims (Nintrinsics):

    (focal_x, focal_y, center_pixel_x, center_pixel_y, distorion0, distortion1,
    ...)

  The focal lengths are given in pixels.
