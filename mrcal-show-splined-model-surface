#!/usr/bin/python3

r'''Visualizes the surface represented in a splined lens model

SYNOPSIS

  $ mrcal-show-splined-model-surface cam.cameramodel x
  ... a plot pops up showing the surface

Splined models are built with a splined surface that we index to compute the
projection. The meaning of what indexes the surface and the values of the
surface varies by model, but in all cases, visualizing the surface is useful.

This tool can produce a plot in the imager domain (the default) or in the spline
index domain (normalized stereographic coordinates, usually). Both are useful.
Pass --spline-index-domain to choose that domain

One use for this tool is to check that the field-of-view we're using for this
model is reasonable. We'd like the field of view to be wide-enough to cover the
whole imager, but not much wider, since representing invisible areas isn't
useful. Ideally the surface domain boundary (that this tool displays) is just
wider than the imager edges (which this tool also displays).

'''


import sys
import argparse
import re
import os

def parse_args():

    parser = \
        argparse.ArgumentParser(description = __doc__,
                                formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument('--extratitle',
                        type=str,
                        default = None,
                        help='''Extra title string for the plot''')

    parser.add_argument('--hardcopy',
                        type=str,
                        help='''Write the output to disk, instead of making an interactive plot''')
    parser.add_argument('--set',
                        type=str,
                        action='append',
                        help='''Extra 'set' directives to gnuplotlib. Can be given multiple times''')
    parser.add_argument('--unset',
                        type=str,
                        action='append',
                        help='''Extra 'unset' directives to gnuplotlib. Can be given multiple times''')
    parser.add_argument('--spline-index-domain',
                        action='store_true',
                        help='''By default this produces a visualization in the domain of the imager.
                        Sometimes it's more informative to look at this in the
                        domain of the spline-index (normalized stereographic
                        coordinates). This can be selected by this option''')
    parser.add_argument('model',
                        type=str,
                        help='''Input camera model. If "-' is given, we read standard input''')

    parser.add_argument('xy',
                        choices = ('x','y'),
                        help='''Whether we're looking at the x surface or the y surface''')

    return parser.parse_args()

args = parse_args()

# arg-parsing is done before the imports so that --help works without building
# stuff, so that I can generate the manpages and README




import numpy as np
import numpysane as nps

import mrcal



model = mrcal.cameramodel(args.model)
lensmodel = model.intrinsics()[0]

if not re.match('LENSMODEL_SPLINED', lensmodel):
    print(f"This only makes sense with splined models. Input uses {lensmodel}",
          file = sys.stderr)
    sys.exit(1)

plotkwargs = {}
if args.set is not None:
    plotkwargs['set'] = args.set
if args.unset is not None:
    plotkwargs['unset'] = args.unset

plot = mrcal.show_splined_model_surface(model, args.xy,

                                        imager_domain = not args.spline_index_domain,
                                        extratitle    = args.extratitle,
                                        hardcopy      = args.hardcopy,
                                        **plotkwargs)

if args.hardcopy is None:
    plot.wait()
