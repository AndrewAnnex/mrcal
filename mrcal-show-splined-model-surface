#!/usr/bin/python3

r'''Visualizes the surface represented in a splined lens model

SYNOPSIS

  $ mrcal-show-splined-model-surface cam.cameramodel 0
  ... a plot pops up showing the surface

Splined models are built with a splined surface that we index to compute the
projection. The meaning of what indexes the surface and the values of the
surface varies by model, but in all cases, visualizing the surface is useful.

We plot a heat map by default, unless --mesh is given

'''

from __future__ import print_function

import sys
import argparse
import re
import os

def parse_args():

    parser = \
        argparse.ArgumentParser(description = __doc__,
                                formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument('--extratitle',
                        type=str,
                        default = None,
                        help='''Extra title string for the plot''')

    parser.add_argument('--hardcopy',
                        type=str,
                        help='''Write the output to disk, instead of making an interactive plot''')
    parser.add_argument('--extraset',
                        type=str,
                        action='append',
                        help='''Extra 'set' directives to gnuplot. Can be given multiple times''')
    parser.add_argument('--mesh',
                        action='store_true',
                        help='''If given, plot the surface as a mesh instead of as a heat map''')

    parser.add_argument('model',
                        type=str,
                        help='''Input camera model. If "-' is given, we read standard input''')

    parser.add_argument('ixy',
                        type=int,
                        choices = (0,1),
                        help='''Whether we're looking at the x surface (0) or the y surface (1)''')

    return parser.parse_args()

args = parse_args()

# arg-parsing is done before the imports so that --help works without building
# stuff, so that I can generate the manpages and README




import numpy as np
import numpysane as nps

import mrcal



model = mrcal.cameramodel(args.model)
lensmodel = model.intrinsics()[0]

if not re.match('LENSMODEL_SPLINED', lensmodel):
    print(f"This only makes sense with splined models. Input uses {lensmodel}",
          file = sys.stderr)
    sys.exit(1)

plotkwargs = {}
if args.extraset is not None:
    plotkwargs['set'] = args.extraset

plot = mrcal.show_splined_model_surface(model, args.ixy,

                                        mesh = args.mesh,
                                        hardcopy     = args.hardcopy,
                                        extratitle   = args.extratitle,
                                        kwargs       = plotkwargs)

if args.hardcopy is None:
    plot.wait()
