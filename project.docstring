Projects a set of 3D camera-frame points to the imager

SYNOPSIS

    points = mrcal.project( # (N,3) array of 3d points we're projecting
                            v,

                            lens_model, intrinsics_data)

    # points is now a (N,2) array of pixel coordinates

Given a (N,3) array of points in the camera frame (x,y aligned with the imager
coords, z 'forward') and an intrinsic model, this function computes the
projection, optionally with gradients.

ARGUMENTS

- points: array of dims (...,3); the points we're projecting. This supports
  broadcasting fully, and any leading dimensions are allowed, including none

- lens_model: a string such as

  LENSMODEL_PINHOLE
  LENSMODEL_OPENCV4
  LENSMODEL_CAHVOR
  LENSMODEL_SPLINED_STEREOGRAPHIC_order=3_Nx=16_Ny=12_fov_x_deg=100

- intrinsics: array of dims (Nintrinsics):

    (focal_x, focal_y, center_pixel_x, center_pixel_y, distortion0, distortion1,
    ...)

  The focal lengths are given in pixels.

- get_gradients: optional boolean that defaults to False. Whether we should
  compute and report the gradients

if not get_gradients: we return an (...,2) array of projected pixel coordinates

if get_gradients: we return a tuple:

  - (...,2) array of projected pixel coordinates
  - (...,2,3) array of the gradients of the pixel coordinates in respect to
    the input 3D point positions
  - (...,2,Nintrinsics) array of the gradients of the pixel coordinates in
    respect to the intrinsics
